{
	"info": {
		"_postman_id": "62f51013-4b80-4c96-ab06-0bdf09918dfa",
		"name": "API REST - BASE DATOS - Plantilla",
		"description": "This collection contains the requests for the section 01 code of the Advanced REST API Course.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "register a new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"dante\",\n  \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{server_address}}/register",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_address}}/user/1",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"jose\",\n  \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{server_address}}/user/2",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"refresh token not empty\", function () {",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}",
									"// set refresh token as environement variable",
									"if (jsonData.refresh_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\" : \"dante\",\n  \"password\" : \"1234\"\n}"
						},
						"url": {
							"raw": "{{server_address}}/login",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{server_address}}/logout",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{local_flask}}/refresh",
							"host": [
								"{{local_flask}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "items",
			"item": [
				{
					"name": "get item/name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_address}}/item/chair",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"item",
								"chair"
							]
						}
					},
					"response": []
				},
				{
					"name": "post item/name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 70,\n  \"store_id\": 1\n}"
						},
						"url": {
							"raw": "{{server_address}}/item/desk",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"item",
								"desk"
							]
						}
					},
					"response": []
				},
				{
					"name": "put item/name",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 65.99,\n  \"store_id\": 1\n}"
						},
						"url": {
							"raw": "{{server_address}}/item/chair",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"item",
								"chair"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete item by name",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{server_address}}/item/chair",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"item",
								"chair"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_address}}/items",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"items"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "stores",
			"item": [
				{
					"name": "create a new store",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{server_address}}/store/My Wonderful Store",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"store",
								"My Wonderful Store"
							]
						}
					},
					"response": []
				},
				{
					"name": "get store by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_address}}/store/My Wonderful Store",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"store",
								"My Wonderful Store"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete a new store by name",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server_address}}/store/My Wonderful Store",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"store",
								"My Wonderful Store"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all stores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_address}}/stores",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "place new order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"tok_1DRkXcAIihGGMS6NVbJiDgig\",\n\t\"item_ids\": [1, 1]\n}"
						},
						"url": {
							"raw": "{{server_address}}/order",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_address}}/order",
							"host": [
								"{{server_address}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}